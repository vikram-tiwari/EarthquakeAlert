package com.vik.myvibratealert;

import java.io.FileDescriptor;
import java.io.PrintWriter;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.os.CountDownTimer;
import android.os.IBinder;
import android.util.Log;
import android.widget.Toast;

public class VibrateService extends Service implements SensorEventListener,OnCompletionListener {
SensorManager sm;
Sensor sensor;
 int a,b,c;
int e=0,f=0,g=0;
 int con=0,minx=0,miny=0,minz=0,maxx=0,maxy=0,maxz=0;
MediaPlayer mp;


	@Override
	public void onCreate() {
		// TODO Auto-generated method stub
		super.onCreate();
		
		sm=(SensorManager)getSystemService(Context.SENSOR_SERVICE);
		sensor=sm.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
		//e=new int[2];
		//f=new int[2];
		//g=new int[2];
		con=0;
		minx=0;
		miny=0;
		minz=0;
		maxx=0;
		maxy=0;
		maxz=0;
		mp=MediaPlayer.create(VibrateService.this, R.raw.earthquake);
	}

	@Override
	public void onStart(Intent intent, int startId) {
		// TODO Auto-generated method stub
		super.onStart(intent, startId);
		
	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		// TODO Auto-generated method stub
		sm.registerListener(this, sensor,sm.SENSOR_DELAY_NORMAL);
		Toast.makeText(VibrateService.this, "start", Toast.LENGTH_LONG).show();
		
		return START_STICKY;
	}

	@Override
	public void onDestroy() {
		
		// TODO Auto-generated method stub
		super.onDestroy();
		sm.unregisterListener(this);
		mp.stop();
		con=0;
		minx=0;
		miny=0;
		minz=0;
		maxx=0;
		maxy=0;
		maxz=0;
		Toast.makeText(VibrateService.this, "stop", Toast.LENGTH_LONG).show();
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		// TODO Auto-generated method stub
		super.onConfigurationChanged(newConfig);
	}

	@Override
	public void onLowMemory() {
		// TODO Auto-generated method stub
		super.onLowMemory();
	}

	@Override
	public void onTrimMemory(int level) {
		// TODO Auto-generated method stub
		super.onTrimMemory(level);
	}

	@Override
	public boolean onUnbind(Intent intent) {
		// TODO Auto-generated method stub
		return super.onUnbind(intent);
	}

	@Override
	public void onRebind(Intent intent) {
		// TODO Auto-generated method stub
		super.onRebind(intent);
	}

	@Override
	public void onTaskRemoved(Intent rootIntent) {
		// TODO Auto-generated method stub
		super.onTaskRemoved(rootIntent);
	}

	@Override
	protected void dump(FileDescriptor fd, PrintWriter writer, String[] args) {
		// TODO Auto-generated method stub
		super.dump(fd, writer, args);
	}

	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void onSensorChanged(SensorEvent event) {
		// TODO Auto-generated method stub
		 a=(int)event.values[0];
		 b=(int)event.values[1];
		 c=(int)event.values[2];
	    if(minx>a){
	    	minx=a;
	    	 }
	    else if(maxx<a){
	    	maxx=a;
	    }
	    if(miny>b){
	    	miny=b;
	    	 }
	    else if(maxy<b){
	    	maxy=b;
	    }
	    if(minz>c){
	    	minz=c;
	    	 }
	    else if(maxz<c){
	    	maxz=c;
	    }
	     
	    if(((maxx+minx==0 && (a==maxx||a==minx)) ||(maxy+miny==0 && (b==maxy||b==miny))||(maxz+minz==0 && (c==maxz||c==minz)))&&(maxx!=0 && maxy!=0 && maxz!=0)){
	    	
	    	con++;
	    	Log.d("DATA", con+"");
	    }
	   /* CountDownTimer cdt=new CountDownTimer(3000,1) {
			
			@Override
			public void onTick(long millisUntilFinished) {
				// TODO Auto-generated method stub
				
				
			}
			
			@Override
			public void onFinish() {
				// TODO Auto-generated method stub
				
			}
		}.start();*/
	    
		if(con>10){
			Log.d("DATA2", con+"");
			startAlertOnVibration();
		}
	    
		 
	}

	@Override
	public void onAccuracyChanged(Sensor sensor, int accuracy) {
		// TODO Auto-generated method stub
		
	}
	public void startAlertOnVibration(){
		if(!mp.isLooping()){
			mp.start();
		}
	}

	@Override
	public void onCompletion(MediaPlayer mp) {
		// TODO Auto-generated method stub
		mp.release();
		if(!mp.isLooping()||!mp.isPlaying()){
			mp.start();
		}
	}

}
